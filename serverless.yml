service: fightdb-all-systems

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  environment:
    MONGODB_URL: ${self:custom.secrets.MONGODB_URL}

functions:
  createGroup:
    handler: groups/handler.createGroup
    events:
      - http:
          path: group
          method: post
          cors: true

  updateGroup:
    handler: groups/handler.updateGroup
    events:
      - http:
          path: group/{id}
          method: put
          cors: true

  deleteGroup:
    handler: groups/handler.deleteGroup
    events:
      - http:
          path: group/{id}
          method: delete
          cors: true

  group:
    handler: groups/handler.group
    events:
      - http:
          path: group/{id}
          method: get
          cors: true

  createGame:
    handler: games/handler.createGame
    events:
      - http:
          path: game
          method: post
          cors: true

  updateGame:
    handler: games/handler.updateGame
    events:
      - http:
          path: game/{id}
          method: put
          cors: true

  deleteGame:
    handler: games/handler.deleteGame
    events:
      - http:
          path: game/{id}
          method: delete
          cors: true

  game:
    handler: games/handler.game
    events:
      - http:
          path: game/{id}
          method: get
          cors: true

  createUser:
    handler: users/handler.createUser
    events:
      - http:
          path: user
          method: post
          cors: true

  updateUserInfo:
    handler: users/handler.updateUserInfo
    events:
      - http:
          path: user/info/{id}
          method: put
          cors: true

  updateUserSocial:
    handler: users/handler.updateUserSocial
    events:
      - http:
          path: user/social/{id}
          method: put
          cors: true

  updateUserGroups:
    handler: users/handler.updateUserGroups
    events:
      - http:
          path: user/groups/{id}
          method: put
          cors: true

  updateUserGames:
    handler: users/handler.updateUserGames
    events:
      - http:
          path: user/games/{id}
          method: put
          cors: true

  updateUserPassword:
    handler: users/handler.updateUserPassword
    events:
      - http:
          path: user/password/{id}
          method: put
          cors: true

  deleteUser:
    handler: users/handler.deleteUser
    events:
      - http:
          path: user/{id}
          method: delete
          cors: true

  user:
    handler: users/handler.user
    events:
      - http:
          path: user/{id}
          method: get
          cors: true

plugins:
  - serverless-offline
  - serverless-secrets-plugin

custom:
  serverless-offline:
    region: "ap-southeast-1"
  secrets: ${file(secrets.${opt:stage, self:provider.stage}.yml)}
